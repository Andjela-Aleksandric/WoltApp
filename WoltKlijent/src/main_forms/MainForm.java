/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main_forms;

import FormKlijent.FormNoviKlijent;
import FormKlijent.FormPretragaKlijenta;
import FormJelo.FormNovoJelo;
import FormJelo.FormPretragaJela;
import FormNarudzbina.FormNovaNarudzbina;
import FormNarudzbina.FormPretragaNarudzbine;
import controller.ClientController;
import model.Administrator;
import model.Jelo;
import model.Klijent;
import model.Narudzbina;
import model.StavkaNarudzbine;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import tableModels.TableModelStavkeNarudzbine;
import communication.Communication;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.TitledBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Anđela
 */
public class MainForm extends javax.swing.JFrame {

    private ResourceBundle messages;
    private Administrator ulogovani;
    private JLabel lblLogo;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        customizeOptionPane();
        setLocationRelativeTo(null);
        this.ulogovani = Communication.getInstance().getUlogovani();
        lblUlogovani.setText("Ulogovani administrator: " + ulogovani);
        setTitle("Klijentska forma");
        getContentPane().setBackground(new Color(1, 195, 233));

        setRobotoFont();
        setForeground(Color.WHITE);

        Image woltIcon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("../resources/wolt-logo.png"));
        setIconImage(woltIcon);

        Locale.setDefault(new Locale("sr", "LATN"));
        messages = ResourceBundle.getBundle("resources.Messages", Locale.getDefault());
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                int response = JOptionPane.showConfirmDialog(
                        null,
                        messages.getString("confirm_question"),
                        messages.getString("confirm_title"),
                        JOptionPane.YES_NO_OPTION
                );

                if (response == JOptionPane.YES_OPTION) {
                    try {
                        ClientController.getInstance().logout(ulogovani);
                        System.out.println("Klijent uspešno odjavljen");
                        new LoginForm().setVisible(true);
                        System.exit(0);
                    } catch (Exception ex) {
                        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        Locale.setDefault(new Locale("sr", "LATN"));
        messages = ResourceBundle.getBundle("resources.Messages", Locale.getDefault());
        createLanguageMenu();
        addLogoToForm();
    }

    private void addLogoToForm() {
        ImageIcon originalIcon = new ImageIcon(getClass().getResource("../resources/wolt.png"));
        Image scaledImage = originalIcon.getImage().getScaledInstance(400, 200, Image.SCALE_SMOOTH); 
        ImageIcon scaledIcon = new ImageIcon(scaledImage);

        lblLogo = new JLabel(scaledIcon);
        lblLogo.setHorizontalAlignment(SwingConstants.CENTER);
        lblLogo.setVerticalAlignment(SwingConstants.CENTER);

        setLayout(new BorderLayout());
        add(lblLogo, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUlogovani = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuKlijent = new javax.swing.JMenu();
        miNoviKlijent = new javax.swing.JMenuItem();
        miPretragaKlijenta = new javax.swing.JMenuItem();
        jMenuJelo = new javax.swing.JMenu();
        miNovoJelo = new javax.swing.JMenuItem();
        miPretragaJela = new javax.swing.JMenuItem();
        jMenuNarudzbina = new javax.swing.JMenu();
        miDodavanjeNarudzbine = new javax.swing.JMenuItem();
        miPretragaNarudzbine = new javax.swing.JMenuItem();
        jMenuOdjava = new javax.swing.JMenu();
        miOdjava = new javax.swing.JMenuItem();
        languageMenu = new javax.swing.JMenu();
        latinicaItem = new javax.swing.JMenuItem();
        cirilicaItem = new javax.swing.JMenuItem();
        englishItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUlogovani.setText("Ulogovani");

        jMenuKlijent.setText("Klijent");

        miNoviKlijent.setText("Novi klijent");
        miNoviKlijent.setPreferredSize(new java.awt.Dimension(99, 22));
        miNoviKlijent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNoviKlijentActionPerformed(evt);
            }
        });
        jMenuKlijent.add(miNoviKlijent);

        miPretragaKlijenta.setText("Pretraga klijenta");
        miPretragaKlijenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaKlijentaActionPerformed(evt);
            }
        });
        jMenuKlijent.add(miPretragaKlijenta);

        jMenuBar1.add(jMenuKlijent);

        jMenuJelo.setText("Jelo");

        miNovoJelo.setText("Novo jelo");
        miNovoJelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNovoJeloActionPerformed(evt);
            }
        });
        jMenuJelo.add(miNovoJelo);

        miPretragaJela.setText("Pretraga jela");
        miPretragaJela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaJelaActionPerformed(evt);
            }
        });
        jMenuJelo.add(miPretragaJela);

        jMenuBar1.add(jMenuJelo);

        jMenuNarudzbina.setText("Narudžbina");

        miDodavanjeNarudzbine.setText("Dodavanje narudžbine");
        miDodavanjeNarudzbine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDodavanjeNarudzbineActionPerformed(evt);
            }
        });
        jMenuNarudzbina.add(miDodavanjeNarudzbine);

        miPretragaNarudzbine.setText("Pretraga narudžbine");
        miPretragaNarudzbine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaNarudzbineActionPerformed(evt);
            }
        });
        jMenuNarudzbina.add(miPretragaNarudzbine);

        jMenuBar1.add(jMenuNarudzbina);

        jMenuOdjava.setText("Odjava");

        miOdjava.setText("Odjavi se");
        miOdjava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOdjavaActionPerformed(evt);
            }
        });
        jMenuOdjava.add(miOdjava);

        jMenuBar1.add(jMenuOdjava);

        languageMenu.setText("Jezik");

        latinicaItem.setText("SRB Latinica");
        languageMenu.add(latinicaItem);

        cirilicaItem.setText("SRB Ćirilica");
        languageMenu.add(cirilicaItem);

        englishItem.setText("ENG");
        languageMenu.add(englishItem);

        jMenuBar1.add(languageMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUlogovani, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUlogovani)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miNoviKlijentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNoviKlijentActionPerformed
        new FormNoviKlijent(this, true).setVisible(true);
    }//GEN-LAST:event_miNoviKlijentActionPerformed

    private void miPretragaKlijentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaKlijentaActionPerformed
        new FormPretragaKlijenta(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaKlijentaActionPerformed

    private void miOdjavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOdjavaActionPerformed
        customizeOptionPane();
        int result = JOptionPane.showConfirmDialog(
                null,
                messages.getString("confirm_question"),
                messages.getString("confirm_title"),
                JOptionPane.YES_NO_OPTION
        );

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            try {
                System.out.println("Klijent uspešno odjavljen");
                ClientController.getInstance().logout(ulogovani);
                new LoginForm().setVisible(true);
                Communication.getInstance().setUlogovani(null);
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_miOdjavaActionPerformed

    private void miNovoJeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNovoJeloActionPerformed
        new FormNovoJelo(this, true).setVisible(true);
    }//GEN-LAST:event_miNovoJeloActionPerformed

    private void miPretragaJelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaJelaActionPerformed
        new FormPretragaJela(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaJelaActionPerformed

    private void miPretragaNarudzbineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaNarudzbineActionPerformed
        new FormPretragaNarudzbine(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaNarudzbineActionPerformed

    private void miDodavanjeNarudzbineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDodavanjeNarudzbineActionPerformed
        new FormNovaNarudzbina(this, true).setVisible(true);
    }//GEN-LAST:event_miDodavanjeNarudzbineActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem cirilicaItem;
    private javax.swing.JMenuItem englishItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuJelo;
    private javax.swing.JMenu jMenuKlijent;
    private javax.swing.JMenu jMenuNarudzbina;
    private javax.swing.JMenu jMenuOdjava;
    private javax.swing.JMenu languageMenu;
    private javax.swing.JMenuItem latinicaItem;
    private javax.swing.JLabel lblUlogovani;
    private javax.swing.JMenuItem miDodavanjeNarudzbine;
    private javax.swing.JMenuItem miNoviKlijent;
    private javax.swing.JMenuItem miNovoJelo;
    private javax.swing.JMenuItem miOdjava;
    private javax.swing.JMenuItem miPretragaJela;
    private javax.swing.JMenuItem miPretragaKlijenta;
    private javax.swing.JMenuItem miPretragaNarudzbine;
    // End of variables declaration//GEN-END:variables

    private void setRobotoFont() {
        try {
            InputStream fontStream = getClass().getClassLoader().getResourceAsStream("resources/Roboto-Regular.ttf");
            if (fontStream != null) {
                Font robotoFont = Font.createFont(Font.TRUETYPE_FONT, fontStream).deriveFont(12f);
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                UIManager.put("Label.font", robotoFont);
                UIManager.put("Button.font", robotoFont);
                UIManager.put("TextField.font", robotoFont);
                UIManager.put("TextArea.font", robotoFont);
                UIManager.put("ComboBox.font", robotoFont);
                UIManager.put("Table.font", robotoFont);
                UIManager.put("Menu.font", robotoFont);
                UIManager.put("MenuItem.font", robotoFont);
                SwingUtilities.updateComponentTreeUI(this);
            } else {
                System.out.println("Font fajl nije pronađen.");
            }
        } catch (FontFormatException | IOException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    private void createLanguageMenu() {

        latinicaItem.addActionListener(e -> setLanguage("sr", "Latn"));
        cirilicaItem.addActionListener(e -> setLanguage("sr", "Cyrl"));
        englishItem.addActionListener(e -> setLanguage("en", "US"));

    }

    private void setLanguage(String language, String country) {
        Locale locale = new Locale(language, country);
        messages = ResourceBundle.getBundle("resources.messages", locale);
        lblUlogovani.setText(messages.getString("lbl_ulogovani") + ": " + ulogovani);
        jMenuJelo.setText(messages.getString("jmenu_jelo"));
        jMenuKlijent.setText(messages.getString("jmenu_client"));
        jMenuOdjava.setText(messages.getString("jmenu_logout"));
        jMenuNarudzbina.setText(messages.getString("jmenu_order"));
        miNoviKlijent.setText(messages.getString("mi_newC"));
        miPretragaKlijenta.setText(messages.getString("mi_findC"));
        miNovoJelo.setText(messages.getString("mi_newD"));
        miPretragaJela.setText(messages.getString("mi_findD"));
        miPretragaNarudzbine.setText(messages.getString("mi_findO"));
        miDodavanjeNarudzbine.setText(messages.getString("mi_addO"));
        miOdjava.setText(messages.getString("mi_logout"));
        languageMenu.setText(messages.getString("jmenu"));
        setTitle(messages.getString("title_main"));
        SwingUtilities.updateComponentTreeUI(this);
    }

    private void customizeOptionPane() {
        UIManager.put("OptionPane.background", new Color(1, 195, 233));
        UIManager.put("Panel.background", new Color(1, 195, 233));

        try {
            InputStream fontStream = getClass().getClassLoader().getResourceAsStream("resources/Roboto-Regular.ttf");
            if (fontStream != null) {
                Font robotoFont = Font.createFont(Font.TRUETYPE_FONT, fontStream).deriveFont(14f);
                UIManager.put("OptionPane.messageFont", robotoFont);
                UIManager.put("OptionPane.buttonFont", robotoFont);
            } else {
                System.out.println("Font fajl nije pronađen.");
            }
        } catch (FontFormatException | IOException e) {
            e.printStackTrace();
        }
    }

}
